

clc; clear all; close all;
% Solve a Clustering Problem with a Self-Organizing Map
% Script generated by NCTOOL
%
% This script assumes these variables are defined:
%
%   simpleclusterInputs - input data.
i=imread('6175777_bf5160f168.jpg'); 
I = imresize(i,0.5);
I1=I;
I=rgb2gray(I);

%Label Every Pixel in the Image Using the Results from KMEANS
nrows=size(I,1);
ncols=size(I,2);

I=reshape(I,1,[]);
I=double(I);
 normA = (I-min(I(:))) ./ (max(I(:))-min(I(:)));
 
 
% normB = (b-min(b(:))) ./ (max(b(:))-min(b(:)));


% cform = makecform('srgb2lab');
% lab_I = applycform(I,cform);
% ab = double(lab_I(:,:,2:3));
% nrows = size(ab,1);
% ncols = size(ab,2);
% ab = reshape(ab,nrows*ncols,2);
% a = ab(:,1);
% b = ab(:,2);
% normA = (a-min(a(:))) ./ (max(a(:))-min(a(:)));
% normB = (b-min(b(:))) ./ (max(b(:))-min(b(:)));
% ab = [normA normB];
% newnRows = size(ab,1);
% newnCols = size(ab,2);

inputs=normA;

%%inputs = simpleclusterInputs;

% Create a Self-Organizing Map
dimension1 = 2;
dimension2 = 2;
net = selforgmap([dimension1 dimension2]);

% Train the Network
[net,tr] = train(net,inputs);

% Test the Network
outputs = net(inputs);

% View the Network
view(net)

cluster=4;

clusterindex=outputs;

clusterindex=vec2ind(clusterindex);




pixel_labels = reshape(clusterindex,nrows,ncols);

segmented_images = cell(1,4);
rgb_label = repmat(pixel_labels,[1 1 3]);

for k = 1:cluster
    color = I1;
    color(rgb_label ~= k) = 0;
    segmented_images{k} = color;
end
figure,imshow(uint8(segmented_images{1})), title('objects in cluster 1');
figure,imshow(uint8(segmented_images{2})), title('objects in cluster 2');
figure,imshow(uint8(segmented_images{3})), title('objects in cluster 3');
figure,imshow(uint8(segmented_images{4})), title('objects in cluster 4');
% Plots
% Uncomment these lines to enable various plots.
% figure, plotsomtop(net)
% figure, plotsomnc(net)
% figure, plotsomnd(net)
% figure, plotsomplanes(net)
% figure, plotsomhits(net,inputs)
% figure, plotsompos(net,inputs)
